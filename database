# create database 

CREATE DATABASE GameDataSet;

USE GameDataSet;

CREATE TABLE Genre (
    Genre_ID INT PRIMARY KEY AUTO_INCREMENT,
    GenreName VARCHAR(50) NOT NULL

CREATE TABLE Platform (
    Platform_ID INT PRIMARY KEY AUTO_INCREMENT,
    Platform_Name VARCHAR(50) UNIQUE
);

CREATE TABLE Game (
    Game_ID VARCHAR(10) PRIMARY KEY,
    Game_Name VARCHAR(100) NOT NULL,
    Release_Year YEAR,
    Global_Sales DECIMAL(10,2),
    User_Rating DECIMAL(3,2),
    Active_Players INT,
    Genre_ID INT,
    Platform_ID INT,    
    
    FOREIGN KEY (Genre_ID) REFERENCES Genre(Genre_ID),
    FOREIGN KEY (Platform_ID) REFERENCES Platform(Platform_ID)
);

# create staging table to then populate the database

CREATE TABLE Game_Staging (
    Game_ID VARCHAR(10),
    Game_Name VARCHAR(100),
    Genre VARCHAR(50),
    Platform VARCHAR(50),
    Release_Year YEAR,
    Global_Sales DECIMAL(10,2),
    User_Rating DECIMAL(3,2),
    Active_Players INT
);

# populate tables with data from staging table

# populates platform table
INSERT IGNORE INTO Platform (Platform_Name) SELECT DISTINCT Platform FROM Game_Staging ORDER BY Platform;

# populates genre table
INSERT IGNORE INTO Genre (GenreName) SELECT DISTINCT Genre FROM Game_Staging ORDER BY Genre ASC;

# populates game table
INSERT IGNORE INTO Game (Game_ID, Game_Name, Release_Year, Global_Sales, User_Rating, Active_Players, Genre_ID, Platform_ID)
SELECT 
    g.Game_ID,
    g.Game_Name,
    g.Release_Year,
    g.Global_Sales,
    g.User_Rating,
    g.Active_Players,
    ge.Genre_ID,
    p.Platform_ID
FROM Game_Staging g
JOIN Genre ge ON g.Genre = ge.GenreName
JOIN Platform p ON g.Platform = p.Platform_Name;

# queries

# top 100 rows 

SELECT * FROM Game LIMIT 100;
SELECT * FROM Genre LIMIT 100;
SELECT * FROM Platform LIMIT 100;

# join statement
SELECT 
    g.Game_ID, 
    g.Game_Name, 
    gn.GenreName, 
    p.Platform_Name
FROM Game g
JOIN Genre gn ON g.Genre_ID = gn.Genre_ID
JOIN Platform p ON g.Platform_ID = p.Platform_ID
ORDER BY g.Game_ID
LIMIT 100;

# aggregate functions
SELECT gn.GenreName, SUM(g.Global_Sales) AS Total_Global_Sales
FROM Game g
JOIN Genre gn ON g.Genre_ID = gn.Genre_ID
GROUP BY gn.GenreName;

# view: top rated games
CREATE VIEW TopRatedGames AS
SELECT 
    g.Game_ID,
    g.Game_Name,
    gn.GenreName,
    p.Platform_Name,
    g.User_Rating
FROM Game g
JOIN Genre gn ON g.Genre_ID = gn.Genre_ID
JOIN Platform p ON g.Platform_ID = p.Platform_ID
WHERE g.User_Rating >= 8
ORDER BY g.User_Rating DESC;

SELECT * FROM TopRatedGames LIMIT 100;

# security
CREATE ROLE gamer;
GRANT SELECT ON gamedataset.* TO gamer;
CREATE USER 'ilikegames'@'localhost' IDENTIFIED BY 'ilikegames590';
CREATE USER 'idontknow'@'localhost' IDENTIFIED BY 'idontknow_90';
CREATE USER 'ilovewarzone'@'localhost' IDENTIFIED BY '_ilovewarzone762';
GRANT gamer TO 'ilikegames'@'localhost';
GRANT gamer TO 'idontknow'@'localhost';
GRANT gamer TO 'ilovewarzone'@'localhost';

